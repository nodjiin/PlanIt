@using Microsoft.Extensions.Options;
@using PlanIt.Application.Dtos.User;
@using PlanIt.Domain.Entities
@using PlanIt.Presentation.WebApp.Options;
@model PlanIt.Application.Dtos.Plan.ReadPlanDto;
@inject IOptions<PlanItBackendApiUrls> options;

@* User modal *@
<div id="modal" class="modal fade" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1"
     aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="staticBackdropLabel">@Localizer["modalTitle"]</h5>
            </div>
            <div class="modal-body">
                <div class="list-group">
                    @foreach (var user in @Model.Users ?? Enumerable.Empty<ReadUserDto>())
                    {
                        <a class="list-group-item list-group-item-action" data-user-id="@user.UserId.ToString()">@user.Name</a>
                    }
                </div>
            </div>
            <div class="modal-footer">
                <div class="input-group mb-3">
                    <input id="newUsernameInput" type="text" class="form-control" placeholder="@Localizer["modalText"]"
                           aria-label="@Localizer["modalText"]" aria-describedby="addButton">
                    <button class="btn btn-outline-secondary" type="button" id="addButton" data-bs-dismiss="modal">@Localizer["modalBtn"]</button>
                </div>
            </div>
        </div>
    </div>
</div>

@* Calendar *@
@await Html.PartialAsync("_CalendarComponent")

<div class="container mt-4 text-center" style="width:20rem;">
    <div class="d-grid gap-2 d-sm-flex justify-content-sm-center mb-2" style="align-items:center;">
        <span>@Localizer["saveSpan"]</span>
        <button id="saveBtn" type="button" class="btn btn-primary">@Localizer["saveBtn"]</button>
    </div>

    <div class="d-grid gap-2 d-sm-flex justify-content-sm-center" style="align-items:center;">
        <span>@Localizer["changeSpan"]</span>
        <button id="changeBtn" type="button" class="btn btn-primary">@Localizer["changeBtn"]</button>
    </div>
</div>

@await Html.PartialAsync("_Alerts")

@{
    var config = options.Value;
    var userApi = config.ServerUrl + config.UserApiUrl;
}

@section Scripts
    {
    <script type="module">
        import { getUIElements, hookUpInteractionHandlers, setLocalizedStrings, setUrls, setServerdata, run } from "../../js/calendar.js"

        document.ready(function () {
            // server-side data
            const months = ["@Localizer["err"]", "@Localizer["jan"]", "@Localizer["feb"]",
                "@Localizer["mar"]", "@Localizer["apr"]", "@Localizer["may"]", "@Localizer["jun"]",
                "@Localizer["jul"]", "@Localizer["aug"]", "@Localizer["sep"]", "@Localizer["oct"]",
                "@Localizer["nov"]", "@Localizer["dec"]"];
            const minDate = new Date("@Model.FirstSchedulableDate.Date.ToString("yyyy-MM-dd")");
            const maxDate = new Date("@Model.LastSchedulableDate.Date.ToString("yyyy-MM-dd")");
            getUIElements();
            hookUpInteractionHandlers();
            setUrls("@userApi", "@Url.Action("Full", "Plan")");
            setLocalizedStrings(months, "@Localizer["saveErr"]", "@Localizer["loadErr"]", "@Localizer["updateErr"]", "@Localizer["invalidNameErr"]");
            setServerdata(minDate, maxDate, "@Model.PlanId");
            run();
        });
    </script>
}